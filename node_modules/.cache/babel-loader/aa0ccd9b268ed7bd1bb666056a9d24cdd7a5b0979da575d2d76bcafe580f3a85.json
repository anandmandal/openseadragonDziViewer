{"ast":null,"code":"var _jsxFileName = \"/home/bs/work/dzi-viewer/frontend/src/components/DZIViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport OpenSeadragon from 'openseadragon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageArray = [{\n  Image: {\n    xmlns: 'http://schemas.microsoft.com/deepzoom/2008',\n    Format: 'jpeg',\n    Overlap: '1',\n    Size: {\n      Height: '6000',\n      Width: '4000'\n    },\n    TileSize: '254',\n    Url: 'http://127.0.0.1:8080/image_files/'\n  }\n}, {\n  Image: {\n    xmlns: 'http://schemas.microsoft.com/deepzoom/2008',\n    Format: 'jpeg',\n    Overlap: '1',\n    Size: {\n      Height: '6000',\n      Width: '4000'\n    },\n    TileSize: '254',\n    Url: 'http://127.0.0.1:8080/image_files/'\n  }\n}, {\n  Image: {\n    xmlns: 'http://schemas.microsoft.com/deepzoom/2008',\n    Format: 'jpeg',\n    Overlap: '1',\n    Size: {\n      Height: '6000',\n      Width: '4000'\n    },\n    TileSize: '254',\n    Url: 'http://127.0.0.1:8080/image_files/'\n  }\n}, {\n  Image: {\n    xmlns: 'http://schemas.microsoft.com/deepzoom/2008',\n    Format: 'jpeg',\n    Overlap: '1',\n    Size: {\n      Height: '6000',\n      Width: '4000'\n    },\n    TileSize: '254',\n    Url: 'http://127.0.0.1:8080/image_files/'\n  }\n}];\nconst DZIViewer = _ref => {\n  _s();\n  let {\n    dziUrl\n  } = _ref;\n  const viewerRef = useRef(null);\n  useEffect(() => {\n    const viewer = OpenSeadragon({\n      element: viewerRef.current,\n      prefixUrl: \"../../openseadragon/images/\",\n      showNavigator: true,\n      // tileSources:{\n      //   Image: {\n      //     xmlns: 'http://schemas.microsoft.com/deepzoom/2008',\n      //     Format: 'jpeg',\n      //     Overlap: '1',\n      //     Size: { Height: '6000', Width: '4000' },\n      //     TileSize: '254',\n      //     Url: '../../image_files/'\n      //   },\n      // }\n      collectionMode: true,\n      collectionRows: 2,\n      collectionColumns: 2,\n      tileSources: imageArray\n    });\n\n    // viewer.addHandler(\"tile-loaded\", function (event) {\n    //   const tiledImage = event.eventSource; \n    //   const viewport = viewer.viewport; \n\n    //   const imageBounds = tiledImage.tileSources.getBounds();\n    //   const contentSize = viewport.getContentSize();\n    //   const zoom = viewport.getZoom();\n\n    //   const targetBounds = {\n    //     x: imageBounds.x + (imageBounds.width / 2),\n    //     y: imageBounds.y + (imageBounds.height / 2),\n    //     width: contentSize.x / zoom,\n    //     height: contentSize.y / zoom,\n    //   };\n\n    //   viewport.fitBoundsWithConstraints(targetBounds);\n    // });\n    return () => {\n      viewer.destroy();\n    };\n  }, [dziUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: viewerRef,\n    style: {\n      width: '100%',\n      height: '500px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 10\n  }, this);\n};\n_s(DZIViewer, \"WZlWBGTTx29lA8KL541/EmcE3B8=\");\n_c = DZIViewer;\nexport default DZIViewer;\nvar _c;\n$RefreshReg$(_c, \"DZIViewer\");","map":{"version":3,"names":["React","useEffect","useRef","OpenSeadragon","jsxDEV","_jsxDEV","imageArray","Image","xmlns","Format","Overlap","Size","Height","Width","TileSize","Url","DZIViewer","_ref","_s","dziUrl","viewerRef","viewer","element","current","prefixUrl","showNavigator","collectionMode","collectionRows","collectionColumns","tileSources","destroy","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bs/work/dzi-viewer/frontend/src/components/DZIViewer.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport OpenSeadragon from 'openseadragon';\n\nconst imageArray = [\n  {\n    Image: {\n      xmlns: 'http://schemas.microsoft.com/deepzoom/2008',\n      Format: 'jpeg',\n      Overlap: '1',\n      Size: { Height: '6000', Width: '4000' },\n      TileSize: '254',\n      Url: 'http://127.0.0.1:8080/image_files/'\n    }\n  },\n  {\n    Image: {\n      xmlns: 'http://schemas.microsoft.com/deepzoom/2008',\n      Format: 'jpeg',\n      Overlap: '1',\n      Size: { Height: '6000', Width: '4000' },\n      TileSize: '254',\n      Url: 'http://127.0.0.1:8080/image_files/'\n    }\n  },\n  {\n    Image: {\n      xmlns: 'http://schemas.microsoft.com/deepzoom/2008',\n      Format: 'jpeg',\n      Overlap: '1',\n      Size: { Height: '6000', Width: '4000' },\n      TileSize: '254',\n      Url: 'http://127.0.0.1:8080/image_files/'\n    }\n  },\n  {\n    Image: {\n      xmlns: 'http://schemas.microsoft.com/deepzoom/2008',\n      Format: 'jpeg',\n      Overlap: '1',\n      Size: { Height: '6000', Width: '4000' },\n      TileSize: '254',\n      Url: 'http://127.0.0.1:8080/image_files/'\n    }\n  },\n\n];\nconst DZIViewer = ({ dziUrl }) => {\n  const viewerRef = useRef(null);\n  useEffect(() => {\n    const viewer = OpenSeadragon({\n      element: viewerRef.current,\n      prefixUrl: \"../../openseadragon/images/\",\n      showNavigator: true,\n      // tileSources:{\n      //   Image: {\n      //     xmlns: 'http://schemas.microsoft.com/deepzoom/2008',\n      //     Format: 'jpeg',\n      //     Overlap: '1',\n      //     Size: { Height: '6000', Width: '4000' },\n      //     TileSize: '254',\n      //     Url: '../../image_files/'\n      //   },\n      // }\n      collectionMode:true,\n      collectionRows:2,\n      collectionColumns:2,\n      tileSources:imageArray\n    });\n\n    // viewer.addHandler(\"tile-loaded\", function (event) {\n    //   const tiledImage = event.eventSource; \n    //   const viewport = viewer.viewport; \n\n    //   const imageBounds = tiledImage.tileSources.getBounds();\n    //   const contentSize = viewport.getContentSize();\n    //   const zoom = viewport.getZoom();\n\n    //   const targetBounds = {\n    //     x: imageBounds.x + (imageBounds.width / 2),\n    //     y: imageBounds.y + (imageBounds.height / 2),\n    //     width: contentSize.x / zoom,\n    //     height: contentSize.y / zoom,\n    //   };\n\n    //   viewport.fitBoundsWithConstraints(targetBounds);\n    // });\n    return () => {\n      viewer.destroy();\n    };\n  }, [dziUrl]);\n\n  return <div ref={viewerRef} style={{ width: '100%', height: '500px' }} />;  \n};\n\nexport default DZIViewer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,aAAa,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,UAAU,GAAG,CACjB;EACEC,KAAK,EAAE;IACLC,KAAK,EAAE,4CAA4C;IACnDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE,GAAG;IACZC,IAAI,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAC;IACvCC,QAAQ,EAAE,KAAK;IACfC,GAAG,EAAE;EACP;AACF,CAAC,EACD;EACER,KAAK,EAAE;IACLC,KAAK,EAAE,4CAA4C;IACnDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE,GAAG;IACZC,IAAI,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAC;IACvCC,QAAQ,EAAE,KAAK;IACfC,GAAG,EAAE;EACP;AACF,CAAC,EACD;EACER,KAAK,EAAE;IACLC,KAAK,EAAE,4CAA4C;IACnDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE,GAAG;IACZC,IAAI,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAC;IACvCC,QAAQ,EAAE,KAAK;IACfC,GAAG,EAAE;EACP;AACF,CAAC,EACD;EACER,KAAK,EAAE;IACLC,KAAK,EAAE,4CAA4C;IACnDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE,GAAG;IACZC,IAAI,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAC;IACvCC,QAAQ,EAAE,KAAK;IACfC,GAAG,EAAE;EACP;AACF,CAAC,CAEF;AACD,MAAMC,SAAS,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC3B,MAAMG,SAAS,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAC9BD,SAAS,CAAC,MAAM;IACd,MAAMoB,MAAM,GAAGlB,aAAa,CAAC;MAC3BmB,OAAO,EAAEF,SAAS,CAACG,OAAO;MAC1BC,SAAS,EAAE,6BAA6B;MACxCC,aAAa,EAAE,IAAI;MACnB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,cAAc,EAAC,IAAI;MACnBC,cAAc,EAAC,CAAC;MAChBC,iBAAiB,EAAC,CAAC;MACnBC,WAAW,EAACvB;IACd,CAAC,CAAC;;IAEF;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA,OAAO,MAAM;MACXe,MAAM,CAACS,OAAO,CAAC,CAAC;IAClB,CAAC;EACH,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EAEZ,oBAAOd,OAAA;IAAK0B,GAAG,EAAEX,SAAU;IAACY,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3E,CAAC;AAACpB,EAAA,CA9CIF,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAgDf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}